image: node:18-alpine

stages:
  - build

variables:
  IMAGE_NAME: docker.io/tebib/osfront:latest

cache:
  key: "${CI_COMMIT_REF_SLUG}-${CACHE_KEY_DEPENDENCIES}"
  paths:
    - node_modules/

build:
  stage: build
  image: docker:24.0.5
  services:
    - docker:24.0.5-dind
  before_script:
    - docker info
    - echo "$DOCKER_HUB_PASSWORD" | docker login -u $DOCKER_HUB_USERNAME --password-stdin
  script:
    # Extract the version from package.json
    - PACKAGE_VERSION=$(node -p "require('./package.json').version")

    # Construct Docker image tag using the specified image name and extracted package version
    - DOCKER_TAG="${IMAGE_NAME}-${PACKAGE_VERSION}"

    # Create and use a Docker context
    - docker context create mycontext
    - docker buildx create --use mycontext

    # Set up Buildx with the specified platforms
    - docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
    - docker buildx inspect --bootstrap

    # Build the multi-platform image
    - docker buildx build --platform linux/amd64 -t $DOCKER_TAG .

    # Tag the Docker image with the constructed version-specific tag
    - docker tag $DOCKER_TAG $IMAGE_NAME

    # Push the version-specific Docker image to the registry
    - docker push $DOCKER_TAG

    # Push the latest version of the Docker image to the registry
    - docker push $IMAGE_NAME
