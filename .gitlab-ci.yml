image: node:16.14.2-bullseye

stages:
  - dependencies
  - build
  - test
  - release
  - artifacts
  - deploy

variables:
  S3_BUCKET_NAME: osfrontahmed
  AWS_REGION: eu-west-3
  ENV_NAME: Osfrontahmed-env

cache:
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - node_modules/

install_dependencies:
  stage: dependencies
  script:
    - npm ci --prefer-offline --no-audit

build:
  stage: build
  script:
    - npm run build:ssr
  artifacts:
    paths:
      - dist/

test:
  stage: test
  before_script:
    - apt-get update
    - wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
    - apt install -y ./google-chrome*.deb
    - export CHROME_BIN=/usr/bin/google-chrome
  script:
    - npm run test -- --no-watch --browsers=ChromeHeadlessCI

release:
  stage: release
  script:
    - npx semantic-release

artifacts:
  stage: artifacts
  dependencies:
    - build
  before_script:
    - apt-get update && apt-get install -y zip
  script:
    - cp Procfile dist/
    - zip -r artifact-osFront.zip dist/
  artifacts:
    paths:
      - artifact-osFront.zip

# Job Two for deploy build to S3
deploy:
  image: python:latest
  stage: deploy
  dependencies:
    - artifacts
  script:
    - apt-get update && apt-get install -y zip
    - echo "Installing AWS CLI..."
    - apt-get install -y awscli
    - echo "Deploying to Elastic Beanstalk..."
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $AWS_REGION
    - aws s3 cp artifact-osFront.zip s3://$S3_BUCKET_NAME/artifact-osFront.zip
    - aws elasticbeanstalk create-application-version --application-name your-application-name --version-label $CI_COMMIT_SHORT_SHA --source-bundle S3Bucket=$S3_BUCKET_NAME,S3Key="artifact-osFront.zip"
    - aws elasticbeanstalk update-environment --application-name your-application-name --environment-name your-environment-name --version-label $CI_COMMIT_SHORT_SHA
  only: ["main"]
